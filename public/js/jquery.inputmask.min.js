!function(t){return void 0===t.fn.inputmask&&(t.fn.inputmask=function(s,e){var i;if(e=e||{},"string"==typeof s)switch(s){case"mask":return i=new inputmask(e),this.each(function(){i.mask(this)});case"unmaskedvalue":var a=this.jquery&&this.length>0?this[0]:this;return a.inputmask?a.inputmask.unmaskedvalue():t(a).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":var a=this.jquery&&this.length>0?this[0]:this;return a.inputmask?a.inputmask.getemptymask():"";case"hasMaskedValue":var a=this.jquery&&this.length>0?this[0]:this;return a.inputmask?a.inputmask.hasMaskedValue():!1;case"isComplete":var a=this.jquery&&this.length>0?this[0]:this;return a.inputmask?a.inputmask.isComplete():!0;case"getmetadata":var a=this.jquery&&this.length>0?this[0]:this;return a.inputmask?a.inputmask.getmetadata():void 0;default:return e.alias=s,i=new inputmask(e),this.each(function(){i.mask(this)})}else{if("object"==typeof s)return i=new inputmask(s),this.each(function(){i.mask(this)});if(void 0==s)return this.each(function(){i=new inputmask(e),i.mask(this)})}}),t.fn.inputmask}(jQuery);